apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workload-identity-sa
  namespace: demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-to-aws
  namespace: demo
  labels:
    app: aks-to-aws
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-to-aws
  template:
    metadata:
      labels:
        app: aks-to-aws
    spec:
      serviceAccountName: workload-identity-sa
      containers:
      - name: aks-to-aws
        image: ${ACR_SERVER}/aks-to-aws:latest
        imagePullPolicy: Always
        env:
        - name: AWS_ROLE_ARN
          value: "${AWS_ROLE_ARN}"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          value: "us-west-2"
        volumeMounts:
        - name: aws-iam-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: aws-iam-token
        projected:
          sources:
          - serviceAccountToken:
              path: token
              audience: sts.amazonaws.com
              expirationSeconds: 86400
---
apiVersion: v1
kind: Service
metadata:
  name: aks-to-aws
  namespace: demo
  labels:
    app: aks-to-aws
spec:
  selector:
    app: aks-to-aws
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP